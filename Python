{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "fe7d307a",
   "metadata": {},
   "outputs": [],
   "source": [
    "with open(\"UKCovidData.csv\") as file:\n",
    "    contents = file.read()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "d7afc8cf",
   "metadata": {},
   "outputs": [],
   "source": [
    "import csv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "86b3049f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Opens a csv file and turns each piece of data into it's own variable.\n",
    "\n",
    "#Whole table DataFrame, Series is columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "64c67a26",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "ebf858a7",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "02137119",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0      10847\n",
      "1      36020\n",
      "2      48022\n",
      "3      35553\n",
      "4      31557\n",
      "       ...  \n",
      "618        0\n",
      "619        0\n",
      "620        0\n",
      "621        0\n",
      "622        2\n",
      "Name: Cases per day, Length: 623, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "data = pandas.read_csv(\"UKCovidData.csv\")\n",
    "print(data[\"Cases per day\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "ba1a5557",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Cases per day</th>\n",
       "      <th>Cumulative Cases</th>\n",
       "      <th>Deaths per day</th>\n",
       "      <th>Cumulative deaths</th>\n",
       "      <th>First Vaccine given</th>\n",
       "      <th>Cumulative first vaccine given</th>\n",
       "      <th>Second Vaccine given</th>\n",
       "      <th>Cumulative second vaccine given</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>623.000000</td>\n",
       "      <td>6.230000e+02</td>\n",
       "      <td>591.000000</td>\n",
       "      <td>591.000000</td>\n",
       "      <td>276.000000</td>\n",
       "      <td>2.770000e+02</td>\n",
       "      <td>276.000000</td>\n",
       "      <td>2.770000e+02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>13350.624398</td>\n",
       "      <td>2.617689e+06</td>\n",
       "      <td>233.901861</td>\n",
       "      <td>80229.991540</td>\n",
       "      <td>170308.307971</td>\n",
       "      <td>3.510740e+07</td>\n",
       "      <td>162600.873188</td>\n",
       "      <td>2.236275e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>15005.841476</td>\n",
       "      <td>2.487623e+06</td>\n",
       "      <td>306.518538</td>\n",
       "      <td>45782.568277</td>\n",
       "      <td>150142.043336</td>\n",
       "      <td>1.376600e+07</td>\n",
       "      <td>141587.215168</td>\n",
       "      <td>1.718992e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000e+00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>13840.000000</td>\n",
       "      <td>2.286572e+06</td>\n",
       "      <td>818.000000</td>\n",
       "      <td>3.913990e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1630.500000</td>\n",
       "      <td>2.863205e+05</td>\n",
       "      <td>21.000000</td>\n",
       "      <td>41319.000000</td>\n",
       "      <td>41512.750000</td>\n",
       "      <td>2.763097e+07</td>\n",
       "      <td>34442.000000</td>\n",
       "      <td>2.228772e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>5313.000000</td>\n",
       "      <td>1.752236e+06</td>\n",
       "      <td>94.000000</td>\n",
       "      <td>70571.000000</td>\n",
       "      <td>127302.500000</td>\n",
       "      <td>3.907564e+07</td>\n",
       "      <td>137522.000000</td>\n",
       "      <td>2.491400e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>23701.500000</td>\n",
       "      <td>4.437045e+06</td>\n",
       "      <td>381.500000</td>\n",
       "      <td>127825.500000</td>\n",
       "      <td>243909.750000</td>\n",
       "      <td>4.696183e+07</td>\n",
       "      <td>232471.750000</td>\n",
       "      <td>3.904753e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>81483.000000</td>\n",
       "      <td>8.317439e+06</td>\n",
       "      <td>1359.000000</td>\n",
       "      <td>138236.000000</td>\n",
       "      <td>752308.000000</td>\n",
       "      <td>4.929166e+07</td>\n",
       "      <td>556951.000000</td>\n",
       "      <td>4.526924e+07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Cases per day  Cumulative Cases  Deaths per day  Cumulative deaths  \\\n",
       "count     623.000000      6.230000e+02      591.000000         591.000000   \n",
       "mean    13350.624398      2.617689e+06      233.901861       80229.991540   \n",
       "std     15005.841476      2.487623e+06      306.518538       45782.568277   \n",
       "min         0.000000      2.000000e+00        0.000000           1.000000   \n",
       "25%      1630.500000      2.863205e+05       21.000000       41319.000000   \n",
       "50%      5313.000000      1.752236e+06       94.000000       70571.000000   \n",
       "75%     23701.500000      4.437045e+06      381.500000      127825.500000   \n",
       "max     81483.000000      8.317439e+06     1359.000000      138236.000000   \n",
       "\n",
       "       First Vaccine given  Cumulative first vaccine given  \\\n",
       "count           276.000000                    2.770000e+02   \n",
       "mean         170308.307971                    3.510740e+07   \n",
       "std          150142.043336                    1.376600e+07   \n",
       "min           13840.000000                    2.286572e+06   \n",
       "25%           41512.750000                    2.763097e+07   \n",
       "50%          127302.500000                    3.907564e+07   \n",
       "75%          243909.750000                    4.696183e+07   \n",
       "max          752308.000000                    4.929166e+07   \n",
       "\n",
       "       Second Vaccine given  Cumulative second vaccine given  \n",
       "count            276.000000                     2.770000e+02  \n",
       "mean          162600.873188                     2.236275e+07  \n",
       "std           141587.215168                     1.718992e+07  \n",
       "min              818.000000                     3.913990e+05  \n",
       "25%            34442.000000                     2.228772e+06  \n",
       "50%           137522.000000                     2.491400e+07  \n",
       "75%           232471.750000                     3.904753e+07  \n",
       "max           556951.000000                     4.526924e+07  "
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pandas.read_csv(\"UKCovidData.csv\")\n",
    "data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "013b81a6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "13350.62\n"
     ]
    }
   ],
   "source": [
    "average_cases = sum(data[\"Cases per day\"]) / len(data)\n",
    "print(round(average_cases, 2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "a5e01021",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['date', 'Cases per day', 'Cumulative Cases', 'Deaths per day',\n",
      "       'Cumulative deaths', 'First Vaccine given',\n",
      "       'Cumulative first vaccine given', 'Second Vaccine given',\n",
      "       'Cumulative second vaccine given'],\n",
      "      dtype='object')\n"
     ]
    }
   ],
   "source": [
    "# Just colums\n",
    "print(data.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "3b5b9938",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "           date  Cases per day  Deaths per day\n",
      "0    2021-10-13          10847            28.0\n",
      "1    2021-10-12          36020            56.0\n",
      "2    2021-10-11          48022            88.0\n",
      "3    2021-10-10          35553            73.0\n",
      "4    2021-10-09          31557            90.0\n",
      "..          ...            ...             ...\n",
      "618  2020-02-03              0             NaN\n",
      "619  2020-02-02              0             NaN\n",
      "620  2020-02-01              0             NaN\n",
      "621  2020-01-31              0             NaN\n",
      "622  2020-01-30              2             NaN\n",
      "\n",
      "[623 rows x 3 columns]\n"
     ]
    }
   ],
   "source": [
    "print(data[['date', 'Cases per day', 'Deaths per day']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "7b392961",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1082\n"
     ]
    }
   ],
   "source": [
    "# read specific location\n",
    "\n",
    "print(data.iloc[500,1]) #[row,column]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "58197101",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>Cases per day</th>\n",
       "      <th>Cumulative Cases</th>\n",
       "      <th>Deaths per day</th>\n",
       "      <th>Cumulative deaths</th>\n",
       "      <th>First Vaccine given</th>\n",
       "      <th>Cumulative first vaccine given</th>\n",
       "      <th>Second Vaccine given</th>\n",
       "      <th>Cumulative second vaccine given</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [date, Cases per day, Cumulative Cases, Deaths per day, Cumulative deaths, First Vaccine given, Cumulative first vaccine given, Second Vaccine given, Cumulative second vaccine given]\n",
       "Index: []"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.loc[data['date'] == \"10\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cca78b84",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "1e7d8961",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Cases per day</th>\n",
       "      <th>Cumulative Cases</th>\n",
       "      <th>Deaths per day</th>\n",
       "      <th>Cumulative deaths</th>\n",
       "      <th>First Vaccine given</th>\n",
       "      <th>Cumulative first vaccine given</th>\n",
       "      <th>Second Vaccine given</th>\n",
       "      <th>Cumulative second vaccine given</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>623.000000</td>\n",
       "      <td>6.230000e+02</td>\n",
       "      <td>591.000000</td>\n",
       "      <td>591.000000</td>\n",
       "      <td>276.000000</td>\n",
       "      <td>2.770000e+02</td>\n",
       "      <td>276.000000</td>\n",
       "      <td>2.770000e+02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>13350.624398</td>\n",
       "      <td>2.617689e+06</td>\n",
       "      <td>233.901861</td>\n",
       "      <td>80229.991540</td>\n",
       "      <td>170308.307971</td>\n",
       "      <td>3.510740e+07</td>\n",
       "      <td>162600.873188</td>\n",
       "      <td>2.236275e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>15005.841476</td>\n",
       "      <td>2.487623e+06</td>\n",
       "      <td>306.518538</td>\n",
       "      <td>45782.568277</td>\n",
       "      <td>150142.043336</td>\n",
       "      <td>1.376600e+07</td>\n",
       "      <td>141587.215168</td>\n",
       "      <td>1.718992e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000e+00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>13840.000000</td>\n",
       "      <td>2.286572e+06</td>\n",
       "      <td>818.000000</td>\n",
       "      <td>3.913990e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1630.500000</td>\n",
       "      <td>2.863205e+05</td>\n",
       "      <td>21.000000</td>\n",
       "      <td>41319.000000</td>\n",
       "      <td>41512.750000</td>\n",
       "      <td>2.763097e+07</td>\n",
       "      <td>34442.000000</td>\n",
       "      <td>2.228772e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>5313.000000</td>\n",
       "      <td>1.752236e+06</td>\n",
       "      <td>94.000000</td>\n",
       "      <td>70571.000000</td>\n",
       "      <td>127302.500000</td>\n",
       "      <td>3.907564e+07</td>\n",
       "      <td>137522.000000</td>\n",
       "      <td>2.491400e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>23701.500000</td>\n",
       "      <td>4.437045e+06</td>\n",
       "      <td>381.500000</td>\n",
       "      <td>127825.500000</td>\n",
       "      <td>243909.750000</td>\n",
       "      <td>4.696183e+07</td>\n",
       "      <td>232471.750000</td>\n",
       "      <td>3.904753e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>81483.000000</td>\n",
       "      <td>8.317439e+06</td>\n",
       "      <td>1359.000000</td>\n",
       "      <td>138236.000000</td>\n",
       "      <td>752308.000000</td>\n",
       "      <td>4.929166e+07</td>\n",
       "      <td>556951.000000</td>\n",
       "      <td>4.526924e+07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Cases per day  Cumulative Cases  Deaths per day  Cumulative deaths  \\\n",
       "count     623.000000      6.230000e+02      591.000000         591.000000   \n",
       "mean    13350.624398      2.617689e+06      233.901861       80229.991540   \n",
       "std     15005.841476      2.487623e+06      306.518538       45782.568277   \n",
       "min         0.000000      2.000000e+00        0.000000           1.000000   \n",
       "25%      1630.500000      2.863205e+05       21.000000       41319.000000   \n",
       "50%      5313.000000      1.752236e+06       94.000000       70571.000000   \n",
       "75%     23701.500000      4.437045e+06      381.500000      127825.500000   \n",
       "max     81483.000000      8.317439e+06     1359.000000      138236.000000   \n",
       "\n",
       "       First Vaccine given  Cumulative first vaccine given  \\\n",
       "count           276.000000                    2.770000e+02   \n",
       "mean         170308.307971                    3.510740e+07   \n",
       "std          150142.043336                    1.376600e+07   \n",
       "min           13840.000000                    2.286572e+06   \n",
       "25%           41512.750000                    2.763097e+07   \n",
       "50%          127302.500000                    3.907564e+07   \n",
       "75%          243909.750000                    4.696183e+07   \n",
       "max          752308.000000                    4.929166e+07   \n",
       "\n",
       "       Second Vaccine given  Cumulative second vaccine given  \n",
       "count            276.000000                     2.770000e+02  \n",
       "mean          162600.873188                     2.236275e+07  \n",
       "std           141587.215168                     1.718992e+07  \n",
       "min              818.000000                     3.913990e+05  \n",
       "25%            34442.000000                     2.228772e+06  \n",
       "50%           137522.000000                     2.491400e+07  \n",
       "75%           232471.750000                     3.904753e+07  \n",
       "max           556951.000000                     4.526924e+07  "
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "5dbe9d3d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "date                                 0\n",
       "Cases per day                        0\n",
       "Cumulative Cases                     0\n",
       "Deaths per day                      32\n",
       "Cumulative deaths                   32\n",
       "First Vaccine given                347\n",
       "Cumulative first vaccine given     346\n",
       "Second Vaccine given               347\n",
       "Cumulative second vaccine given    346\n",
       "dtype: int64"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#shows all null values\n",
    "data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "95519775",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>Cases per day</th>\n",
       "      <th>Cumulative Cases</th>\n",
       "      <th>Deaths per day</th>\n",
       "      <th>Cumulative deaths</th>\n",
       "      <th>First Vaccine given</th>\n",
       "      <th>Cumulative first vaccine given</th>\n",
       "      <th>Second Vaccine given</th>\n",
       "      <th>Cumulative second vaccine given</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>288</th>\n",
       "      <td>2020-12-29</td>\n",
       "      <td>81483</td>\n",
       "      <td>2530891</td>\n",
       "      <td>656.0</td>\n",
       "      <td>74970.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>282</th>\n",
       "      <td>2021-01-04</td>\n",
       "      <td>76146</td>\n",
       "      <td>2877978</td>\n",
       "      <td>840.0</td>\n",
       "      <td>79555.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>287</th>\n",
       "      <td>2020-12-30</td>\n",
       "      <td>70746</td>\n",
       "      <td>2601637</td>\n",
       "      <td>721.0</td>\n",
       "      <td>75691.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>281</th>\n",
       "      <td>2021-01-05</td>\n",
       "      <td>65078</td>\n",
       "      <td>2943056</td>\n",
       "      <td>906.0</td>\n",
       "      <td>80461.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>2021-07-15</td>\n",
       "      <td>60764</td>\n",
       "      <td>5390049</td>\n",
       "      <td>52.0</td>\n",
       "      <td>128827.0</td>\n",
       "      <td>61681.0</td>\n",
       "      <td>46159145.0</td>\n",
       "      <td>201893.0</td>\n",
       "      <td>35543321.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>284</th>\n",
       "      <td>2021-01-02</td>\n",
       "      <td>60421</td>\n",
       "      <td>2746670</td>\n",
       "      <td>760.0</td>\n",
       "      <td>77956.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>280</th>\n",
       "      <td>2021-01-06</td>\n",
       "      <td>57374</td>\n",
       "      <td>3000430</td>\n",
       "      <td>931.0</td>\n",
       "      <td>81392.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>275</th>\n",
       "      <td>2021-01-11</td>\n",
       "      <td>57093</td>\n",
       "      <td>3231858</td>\n",
       "      <td>1129.0</td>\n",
       "      <td>86614.0</td>\n",
       "      <td>145076.0</td>\n",
       "      <td>2431648.0</td>\n",
       "      <td>20768.0</td>\n",
       "      <td>412167.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>283</th>\n",
       "      <td>2021-01-03</td>\n",
       "      <td>55162</td>\n",
       "      <td>2801832</td>\n",
       "      <td>759.0</td>\n",
       "      <td>78715.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>2021-07-16</td>\n",
       "      <td>54241</td>\n",
       "      <td>5444290</td>\n",
       "      <td>50.0</td>\n",
       "      <td>128877.0</td>\n",
       "      <td>69491.0</td>\n",
       "      <td>46228636.0</td>\n",
       "      <td>202314.0</td>\n",
       "      <td>35745635.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           date  Cases per day  Cumulative Cases  Deaths per day  \\\n",
       "288  2020-12-29          81483           2530891           656.0   \n",
       "282  2021-01-04          76146           2877978           840.0   \n",
       "287  2020-12-30          70746           2601637           721.0   \n",
       "281  2021-01-05          65078           2943056           906.0   \n",
       "90   2021-07-15          60764           5390049            52.0   \n",
       "284  2021-01-02          60421           2746670           760.0   \n",
       "280  2021-01-06          57374           3000430           931.0   \n",
       "275  2021-01-11          57093           3231858          1129.0   \n",
       "283  2021-01-03          55162           2801832           759.0   \n",
       "89   2021-07-16          54241           5444290            50.0   \n",
       "\n",
       "     Cumulative deaths  First Vaccine given  Cumulative first vaccine given  \\\n",
       "288            74970.0                  NaN                             NaN   \n",
       "282            79555.0                  NaN                             NaN   \n",
       "287            75691.0                  NaN                             NaN   \n",
       "281            80461.0                  NaN                             NaN   \n",
       "90            128827.0              61681.0                      46159145.0   \n",
       "284            77956.0                  NaN                             NaN   \n",
       "280            81392.0                  NaN                             NaN   \n",
       "275            86614.0             145076.0                       2431648.0   \n",
       "283            78715.0                  NaN                             NaN   \n",
       "89            128877.0              69491.0                      46228636.0   \n",
       "\n",
       "     Second Vaccine given  Cumulative second vaccine given  \n",
       "288                   NaN                              NaN  \n",
       "282                   NaN                              NaN  \n",
       "287                   NaN                              NaN  \n",
       "281                   NaN                              NaN  \n",
       "90               201893.0                       35543321.0  \n",
       "284                   NaN                              NaN  \n",
       "280                   NaN                              NaN  \n",
       "275               20768.0                         412167.0  \n",
       "283                   NaN                              NaN  \n",
       "89               202314.0                       35745635.0  "
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# cases per day descending\n",
    "data.sort_values(by='Cases per day', ascending=False).head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "dd144410",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\amy20\\AppData\\Local\\Temp\\ipykernel_11920\\2627137660.py:1: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n",
      "  data.corr()\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Cases per day</th>\n",
       "      <th>Cumulative Cases</th>\n",
       "      <th>Deaths per day</th>\n",
       "      <th>Cumulative deaths</th>\n",
       "      <th>First Vaccine given</th>\n",
       "      <th>Cumulative first vaccine given</th>\n",
       "      <th>Second Vaccine given</th>\n",
       "      <th>Cumulative second vaccine given</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Cases per day</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.557441</td>\n",
       "      <td>0.343281</td>\n",
       "      <td>0.407088</td>\n",
       "      <td>-0.402091</td>\n",
       "      <td>0.282478</td>\n",
       "      <td>-0.491968</td>\n",
       "      <td>0.567049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cumulative Cases</th>\n",
       "      <td>0.557441</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.138111</td>\n",
       "      <td>0.945115</td>\n",
       "      <td>-0.672848</td>\n",
       "      <td>0.768711</td>\n",
       "      <td>-0.216312</td>\n",
       "      <td>0.864697</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Deaths per day</th>\n",
       "      <td>0.343281</td>\n",
       "      <td>-0.138111</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.180226</td>\n",
       "      <td>0.473024</td>\n",
       "      <td>-0.778628</td>\n",
       "      <td>-0.530092</td>\n",
       "      <td>-0.477488</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cumulative deaths</th>\n",
       "      <td>0.407088</td>\n",
       "      <td>0.945115</td>\n",
       "      <td>-0.180226</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.577901</td>\n",
       "      <td>0.874575</td>\n",
       "      <td>0.258520</td>\n",
       "      <td>0.683722</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>First Vaccine given</th>\n",
       "      <td>-0.402091</td>\n",
       "      <td>-0.672848</td>\n",
       "      <td>0.473024</td>\n",
       "      <td>-0.577901</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.774610</td>\n",
       "      <td>-0.189787</td>\n",
       "      <td>-0.772373</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cumulative first vaccine given</th>\n",
       "      <td>0.282478</td>\n",
       "      <td>0.768711</td>\n",
       "      <td>-0.778628</td>\n",
       "      <td>0.874575</td>\n",
       "      <td>-0.774610</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.280031</td>\n",
       "      <td>0.916036</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Second Vaccine given</th>\n",
       "      <td>-0.491968</td>\n",
       "      <td>-0.216312</td>\n",
       "      <td>-0.530092</td>\n",
       "      <td>0.258520</td>\n",
       "      <td>-0.189787</td>\n",
       "      <td>0.280031</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.035624</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cumulative second vaccine given</th>\n",
       "      <td>0.567049</td>\n",
       "      <td>0.864697</td>\n",
       "      <td>-0.477488</td>\n",
       "      <td>0.683722</td>\n",
       "      <td>-0.772373</td>\n",
       "      <td>0.916036</td>\n",
       "      <td>0.035624</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                 Cases per day  Cumulative Cases  \\\n",
       "Cases per day                         1.000000          0.557441   \n",
       "Cumulative Cases                      0.557441          1.000000   \n",
       "Deaths per day                        0.343281         -0.138111   \n",
       "Cumulative deaths                     0.407088          0.945115   \n",
       "First Vaccine given                  -0.402091         -0.672848   \n",
       "Cumulative first vaccine given        0.282478          0.768711   \n",
       "Second Vaccine given                 -0.491968         -0.216312   \n",
       "Cumulative second vaccine given       0.567049          0.864697   \n",
       "\n",
       "                                 Deaths per day  Cumulative deaths  \\\n",
       "Cases per day                          0.343281           0.407088   \n",
       "Cumulative Cases                      -0.138111           0.945115   \n",
       "Deaths per day                         1.000000          -0.180226   \n",
       "Cumulative deaths                     -0.180226           1.000000   \n",
       "First Vaccine given                    0.473024          -0.577901   \n",
       "Cumulative first vaccine given        -0.778628           0.874575   \n",
       "Second Vaccine given                  -0.530092           0.258520   \n",
       "Cumulative second vaccine given       -0.477488           0.683722   \n",
       "\n",
       "                                 First Vaccine given  \\\n",
       "Cases per day                              -0.402091   \n",
       "Cumulative Cases                           -0.672848   \n",
       "Deaths per day                              0.473024   \n",
       "Cumulative deaths                          -0.577901   \n",
       "First Vaccine given                         1.000000   \n",
       "Cumulative first vaccine given             -0.774610   \n",
       "Second Vaccine given                       -0.189787   \n",
       "Cumulative second vaccine given            -0.772373   \n",
       "\n",
       "                                 Cumulative first vaccine given  \\\n",
       "Cases per day                                          0.282478   \n",
       "Cumulative Cases                                       0.768711   \n",
       "Deaths per day                                        -0.778628   \n",
       "Cumulative deaths                                      0.874575   \n",
       "First Vaccine given                                   -0.774610   \n",
       "Cumulative first vaccine given                         1.000000   \n",
       "Second Vaccine given                                   0.280031   \n",
       "Cumulative second vaccine given                        0.916036   \n",
       "\n",
       "                                 Second Vaccine given  \\\n",
       "Cases per day                               -0.491968   \n",
       "Cumulative Cases                            -0.216312   \n",
       "Deaths per day                              -0.530092   \n",
       "Cumulative deaths                            0.258520   \n",
       "First Vaccine given                         -0.189787   \n",
       "Cumulative first vaccine given               0.280031   \n",
       "Second Vaccine given                         1.000000   \n",
       "Cumulative second vaccine given              0.035624   \n",
       "\n",
       "                                 Cumulative second vaccine given  \n",
       "Cases per day                                           0.567049  \n",
       "Cumulative Cases                                        0.864697  \n",
       "Deaths per day                                         -0.477488  \n",
       "Cumulative deaths                                       0.683722  \n",
       "First Vaccine given                                    -0.772373  \n",
       "Cumulative first vaccine given                          0.916036  \n",
       "Second Vaccine given                                    0.035624  \n",
       "Cumulative second vaccine given                         1.000000  "
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "9cf3568f",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "62a59e45",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\amy20\\AppData\\Local\\Temp\\ipykernel_11920\\104075714.py:1: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n",
      "  sns.heatmap(data.corr(), annot=True)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(data.corr(), annot=True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "fa5862e5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Cases per day</th>\n",
       "      <th>Cumulative Cases</th>\n",
       "      <th>Deaths per day</th>\n",
       "      <th>Cumulative deaths</th>\n",
       "      <th>First Vaccine given</th>\n",
       "      <th>Cumulative first vaccine given</th>\n",
       "      <th>Second Vaccine given</th>\n",
       "      <th>Cumulative second vaccine given</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-01-30</th>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-31</th>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-02-01</th>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-02-02</th>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-02-03</th>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-09</th>\n",
       "      <td>31557.0</td>\n",
       "      <td>8186997.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>137991.0</td>\n",
       "      <td>31395.0</td>\n",
       "      <td>49164814.0</td>\n",
       "      <td>33477.0</td>\n",
       "      <td>45169730.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-10</th>\n",
       "      <td>35553.0</td>\n",
       "      <td>8222550.0</td>\n",
       "      <td>73.0</td>\n",
       "      <td>138064.0</td>\n",
       "      <td>22106.0</td>\n",
       "      <td>49186920.0</td>\n",
       "      <td>19451.0</td>\n",
       "      <td>45189181.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-11</th>\n",
       "      <td>48022.0</td>\n",
       "      <td>8270572.0</td>\n",
       "      <td>88.0</td>\n",
       "      <td>138152.0</td>\n",
       "      <td>29172.0</td>\n",
       "      <td>49216092.0</td>\n",
       "      <td>23632.0</td>\n",
       "      <td>45212813.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-12</th>\n",
       "      <td>36020.0</td>\n",
       "      <td>8306592.0</td>\n",
       "      <td>56.0</td>\n",
       "      <td>138208.0</td>\n",
       "      <td>36847.0</td>\n",
       "      <td>49252939.0</td>\n",
       "      <td>26946.0</td>\n",
       "      <td>45239759.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-13</th>\n",
       "      <td>10847.0</td>\n",
       "      <td>8317439.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>138236.0</td>\n",
       "      <td>38726.0</td>\n",
       "      <td>49291665.0</td>\n",
       "      <td>29481.0</td>\n",
       "      <td>45269240.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>623 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Cases per day  Cumulative Cases  Deaths per day  \\\n",
       "date                                                          \n",
       "2020-01-30            2.0               2.0             NaN   \n",
       "2020-01-31            0.0               2.0             NaN   \n",
       "2020-02-01            0.0               2.0             NaN   \n",
       "2020-02-02            0.0               2.0             NaN   \n",
       "2020-02-03            0.0               2.0             NaN   \n",
       "...                   ...               ...             ...   \n",
       "2021-10-09        31557.0         8186997.0            90.0   \n",
       "2021-10-10        35553.0         8222550.0            73.0   \n",
       "2021-10-11        48022.0         8270572.0            88.0   \n",
       "2021-10-12        36020.0         8306592.0            56.0   \n",
       "2021-10-13        10847.0         8317439.0            28.0   \n",
       "\n",
       "            Cumulative deaths  First Vaccine given  \\\n",
       "date                                                 \n",
       "2020-01-30                NaN                  NaN   \n",
       "2020-01-31                NaN                  NaN   \n",
       "2020-02-01                NaN                  NaN   \n",
       "2020-02-02                NaN                  NaN   \n",
       "2020-02-03                NaN                  NaN   \n",
       "...                       ...                  ...   \n",
       "2021-10-09           137991.0              31395.0   \n",
       "2021-10-10           138064.0              22106.0   \n",
       "2021-10-11           138152.0              29172.0   \n",
       "2021-10-12           138208.0              36847.0   \n",
       "2021-10-13           138236.0              38726.0   \n",
       "\n",
       "            Cumulative first vaccine given  Second Vaccine given  \\\n",
       "date                                                               \n",
       "2020-01-30                             NaN                   NaN   \n",
       "2020-01-31                             NaN                   NaN   \n",
       "2020-02-01                             NaN                   NaN   \n",
       "2020-02-02                             NaN                   NaN   \n",
       "2020-02-03                             NaN                   NaN   \n",
       "...                                    ...                   ...   \n",
       "2021-10-09                      49164814.0               33477.0   \n",
       "2021-10-10                      49186920.0               19451.0   \n",
       "2021-10-11                      49216092.0               23632.0   \n",
       "2021-10-12                      49252939.0               26946.0   \n",
       "2021-10-13                      49291665.0               29481.0   \n",
       "\n",
       "            Cumulative second vaccine given  \n",
       "date                                         \n",
       "2020-01-30                              NaN  \n",
       "2020-01-31                              NaN  \n",
       "2020-02-01                              NaN  \n",
       "2020-02-02                              NaN  \n",
       "2020-02-03                              NaN  \n",
       "...                                     ...  \n",
       "2021-10-09                       45169730.0  \n",
       "2021-10-10                       45189181.0  \n",
       "2021-10-11                       45212813.0  \n",
       "2021-10-12                       45239759.0  \n",
       "2021-10-13                       45269240.0  \n",
       "\n",
       "[623 rows x 8 columns]"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.groupby('date').mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "219ddfd0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>Cases per day</th>\n",
       "      <th>Cumulative Cases</th>\n",
       "      <th>Deaths per day</th>\n",
       "      <th>Cumulative deaths</th>\n",
       "      <th>First Vaccine given</th>\n",
       "      <th>Cumulative first vaccine given</th>\n",
       "      <th>Second Vaccine given</th>\n",
       "      <th>Cumulative second vaccine given</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2021-10-13</td>\n",
       "      <td>10847</td>\n",
       "      <td>8317439</td>\n",
       "      <td>28.0</td>\n",
       "      <td>138236.0</td>\n",
       "      <td>38726.0</td>\n",
       "      <td>49291665.0</td>\n",
       "      <td>29481.0</td>\n",
       "      <td>45269240.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2021-10-12</td>\n",
       "      <td>36020</td>\n",
       "      <td>8306592</td>\n",
       "      <td>56.0</td>\n",
       "      <td>138208.0</td>\n",
       "      <td>36847.0</td>\n",
       "      <td>49252939.0</td>\n",
       "      <td>26946.0</td>\n",
       "      <td>45239759.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2021-10-11</td>\n",
       "      <td>48022</td>\n",
       "      <td>8270572</td>\n",
       "      <td>88.0</td>\n",
       "      <td>138152.0</td>\n",
       "      <td>29172.0</td>\n",
       "      <td>49216092.0</td>\n",
       "      <td>23632.0</td>\n",
       "      <td>45212813.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2021-10-10</td>\n",
       "      <td>35553</td>\n",
       "      <td>8222550</td>\n",
       "      <td>73.0</td>\n",
       "      <td>138064.0</td>\n",
       "      <td>22106.0</td>\n",
       "      <td>49186920.0</td>\n",
       "      <td>19451.0</td>\n",
       "      <td>45189181.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2021-10-09</td>\n",
       "      <td>31557</td>\n",
       "      <td>8186997</td>\n",
       "      <td>90.0</td>\n",
       "      <td>137991.0</td>\n",
       "      <td>31395.0</td>\n",
       "      <td>49164814.0</td>\n",
       "      <td>33477.0</td>\n",
       "      <td>45169730.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>618</th>\n",
       "      <td>2020-02-03</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>619</th>\n",
       "      <td>2020-02-02</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>620</th>\n",
       "      <td>2020-02-01</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>621</th>\n",
       "      <td>2020-01-31</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>622</th>\n",
       "      <td>2020-01-30</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>623 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           date  Cases per day  Cumulative Cases  Deaths per day  \\\n",
       "0    2021-10-13          10847           8317439            28.0   \n",
       "1    2021-10-12          36020           8306592            56.0   \n",
       "2    2021-10-11          48022           8270572            88.0   \n",
       "3    2021-10-10          35553           8222550            73.0   \n",
       "4    2021-10-09          31557           8186997            90.0   \n",
       "..          ...            ...               ...             ...   \n",
       "618  2020-02-03              0                 2             NaN   \n",
       "619  2020-02-02              0                 2             NaN   \n",
       "620  2020-02-01              0                 2             NaN   \n",
       "621  2020-01-31              0                 2             NaN   \n",
       "622  2020-01-30              2                 2             NaN   \n",
       "\n",
       "     Cumulative deaths  First Vaccine given  Cumulative first vaccine given  \\\n",
       "0             138236.0              38726.0                      49291665.0   \n",
       "1             138208.0              36847.0                      49252939.0   \n",
       "2             138152.0              29172.0                      49216092.0   \n",
       "3             138064.0              22106.0                      49186920.0   \n",
       "4             137991.0              31395.0                      49164814.0   \n",
       "..                 ...                  ...                             ...   \n",
       "618                NaN                  NaN                             NaN   \n",
       "619                NaN                  NaN                             NaN   \n",
       "620                NaN                  NaN                             NaN   \n",
       "621                NaN                  NaN                             NaN   \n",
       "622                NaN                  NaN                             NaN   \n",
       "\n",
       "     Second Vaccine given  Cumulative second vaccine given  \n",
       "0                 29481.0                       45269240.0  \n",
       "1                 26946.0                       45239759.0  \n",
       "2                 23632.0                       45212813.0  \n",
       "3                 19451.0                       45189181.0  \n",
       "4                 33477.0                       45169730.0  \n",
       "..                    ...                              ...  \n",
       "618                   NaN                              NaN  \n",
       "619                   NaN                              NaN  \n",
       "620                   NaN                              NaN  \n",
       "621                   NaN                              NaN  \n",
       "622                   NaN                              NaN  \n",
       "\n",
       "[623 rows x 9 columns]"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "c7f13b7d",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['Date_2'] = pandas.to_datetime(data['date']).dt.date"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "cb25f3d7",
   "metadata": {},
   "outputs": [],
   "source": [
    "move_date = data.pop('Date_2')\n",
    "data.insert(0, 'Date_2', move_date)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "8e8e60d1",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date_2</th>\n",
       "      <th>date</th>\n",
       "      <th>Cases per day</th>\n",
       "      <th>Cumulative Cases</th>\n",
       "      <th>Deaths per day</th>\n",
       "      <th>Cumulative deaths</th>\n",
       "      <th>First Vaccine given</th>\n",
       "      <th>Cumulative first vaccine given</th>\n",
       "      <th>Second Vaccine given</th>\n",
       "      <th>Cumulative second vaccine given</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2021-10-13</td>\n",
       "      <td>2021-10-13</td>\n",
       "      <td>10847</td>\n",
       "      <td>8317439</td>\n",
       "      <td>28.0</td>\n",
       "      <td>138236.0</td>\n",
       "      <td>38726.0</td>\n",
       "      <td>49291665.0</td>\n",
       "      <td>29481.0</td>\n",
       "      <td>45269240.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2021-10-12</td>\n",
       "      <td>2021-10-12</td>\n",
       "      <td>36020</td>\n",
       "      <td>8306592</td>\n",
       "      <td>56.0</td>\n",
       "      <td>138208.0</td>\n",
       "      <td>36847.0</td>\n",
       "      <td>49252939.0</td>\n",
       "      <td>26946.0</td>\n",
       "      <td>45239759.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2021-10-11</td>\n",
       "      <td>2021-10-11</td>\n",
       "      <td>48022</td>\n",
       "      <td>8270572</td>\n",
       "      <td>88.0</td>\n",
       "      <td>138152.0</td>\n",
       "      <td>29172.0</td>\n",
       "      <td>49216092.0</td>\n",
       "      <td>23632.0</td>\n",
       "      <td>45212813.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2021-10-10</td>\n",
       "      <td>2021-10-10</td>\n",
       "      <td>35553</td>\n",
       "      <td>8222550</td>\n",
       "      <td>73.0</td>\n",
       "      <td>138064.0</td>\n",
       "      <td>22106.0</td>\n",
       "      <td>49186920.0</td>\n",
       "      <td>19451.0</td>\n",
       "      <td>45189181.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2021-10-09</td>\n",
       "      <td>2021-10-09</td>\n",
       "      <td>31557</td>\n",
       "      <td>8186997</td>\n",
       "      <td>90.0</td>\n",
       "      <td>137991.0</td>\n",
       "      <td>31395.0</td>\n",
       "      <td>49164814.0</td>\n",
       "      <td>33477.0</td>\n",
       "      <td>45169730.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>618</th>\n",
       "      <td>2020-02-03</td>\n",
       "      <td>2020-02-03</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>619</th>\n",
       "      <td>2020-02-02</td>\n",
       "      <td>2020-02-02</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>620</th>\n",
       "      <td>2020-02-01</td>\n",
       "      <td>2020-02-01</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>621</th>\n",
       "      <td>2020-01-31</td>\n",
       "      <td>2020-01-31</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>622</th>\n",
       "      <td>2020-01-30</td>\n",
       "      <td>2020-01-30</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>623 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Date_2        date  Cases per day  Cumulative Cases  Deaths per day  \\\n",
       "0    2021-10-13  2021-10-13          10847           8317439            28.0   \n",
       "1    2021-10-12  2021-10-12          36020           8306592            56.0   \n",
       "2    2021-10-11  2021-10-11          48022           8270572            88.0   \n",
       "3    2021-10-10  2021-10-10          35553           8222550            73.0   \n",
       "4    2021-10-09  2021-10-09          31557           8186997            90.0   \n",
       "..          ...         ...            ...               ...             ...   \n",
       "618  2020-02-03  2020-02-03              0                 2             NaN   \n",
       "619  2020-02-02  2020-02-02              0                 2             NaN   \n",
       "620  2020-02-01  2020-02-01              0                 2             NaN   \n",
       "621  2020-01-31  2020-01-31              0                 2             NaN   \n",
       "622  2020-01-30  2020-01-30              2                 2             NaN   \n",
       "\n",
       "     Cumulative deaths  First Vaccine given  Cumulative first vaccine given  \\\n",
       "0             138236.0              38726.0                      49291665.0   \n",
       "1             138208.0              36847.0                      49252939.0   \n",
       "2             138152.0              29172.0                      49216092.0   \n",
       "3             138064.0              22106.0                      49186920.0   \n",
       "4             137991.0              31395.0                      49164814.0   \n",
       "..                 ...                  ...                             ...   \n",
       "618                NaN                  NaN                             NaN   \n",
       "619                NaN                  NaN                             NaN   \n",
       "620                NaN                  NaN                             NaN   \n",
       "621                NaN                  NaN                             NaN   \n",
       "622                NaN                  NaN                             NaN   \n",
       "\n",
       "     Second Vaccine given  Cumulative second vaccine given  \n",
       "0                 29481.0                       45269240.0  \n",
       "1                 26946.0                       45239759.0  \n",
       "2                 23632.0                       45212813.0  \n",
       "3                 19451.0                       45189181.0  \n",
       "4                 33477.0                       45169730.0  \n",
       "..                    ...                              ...  \n",
       "618                   NaN                              NaN  \n",
       "619                   NaN                              NaN  \n",
       "620                   NaN                              NaN  \n",
       "621                   NaN                              NaN  \n",
       "622                   NaN                              NaN  \n",
       "\n",
       "[623 rows x 10 columns]"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "b4edd8c2",
   "metadata": {},
   "outputs": [],
   "source": [
    "import datetime"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "450d68be",
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'Series' object has no attribute 'datetime'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp\\ipykernel_11920\\909251392.py\u001b[0m in \u001b[0;36m?\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mdata\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mgroupby\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'Date_2'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdatetime\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'%M'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0msum\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;32m~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pandas\\core\\generic.py\u001b[0m in \u001b[0;36m?\u001b[1;34m(self, name)\u001b[0m\n\u001b[0;32m   5898\u001b[0m             \u001b[1;32mand\u001b[0m \u001b[0mname\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_accessors\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   5899\u001b[0m             \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_info_axis\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_can_hold_identifiers_and_holds_name\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mname\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   5900\u001b[0m         ):\n\u001b[0;32m   5901\u001b[0m             \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mname\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 5902\u001b[1;33m         \u001b[1;32mreturn\u001b[0m \u001b[0mobject\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__getattribute__\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mname\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mAttributeError\u001b[0m: 'Series' object has no attribute 'datetime'"
     ]
    }
   ],
   "source": [
    "data.groupby(data['Date_2'].datetime('%M')).sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7522e166",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
